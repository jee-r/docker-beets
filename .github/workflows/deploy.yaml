name: Deploy
on:
  push:
    branches:
      - master
      - dev
jobs:
  build:
    name: Build, tag, and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Get branch
        run: |
          echo "GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV
      - name: Set main docker image tag 
        run: |
          if [[ "$i{{ env.GIT_BRANCH }}" == "main" ]] || [[ "${{ env.GIT_BRANCH }}" == "master" ]]; then
            echo "MAIN_DOCKER_TAG=latest" >> $GITHUB_ENV
          else
            echo "MAIN_DOCKER_TAG=${{ env.GIT_BRANCH }}" >> $GITHUB_ENV
          fi
      - name: remove docker from repo name
        run: |
          echo "IMAGE_NAME=$(echo ${{ github.repository }} | sed 's|^jee-r/docker-||g')" >> $GITHUB_ENV
      - name: crop SHA
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: print env
        run: echo $ENV
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master
      - name: Login into DockerHub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Login into GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.SHORT_SHA }}
            ghcr.io/${{ github.repository }}:${{ env.MAIN_DOCKER_TAG }}
            ghcr.io/${{ github.repository }}:${{ env.GIT_BRANCH }}
            ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
            ${{ env.IMAGE_NAME }}:${{ env.MAIN_DOCKER_TAG }}
            ${{ env.IMAGE_NAME }}:${{ env.GIT_BRANCH }} 